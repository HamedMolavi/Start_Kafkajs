# docker-compose rm -svf
version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafkaNet
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    tmpfs: "/datalog"


  kafka1:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1 # static id
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092, PLAINTEXT://kafka1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT_HOST://localhost:9092, PLAINTEXT://kafka1:29092
      # KAFKA_ADVERTISED_HOST_NAME: localhost
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
      - zookeeper
    networks:
      - kafkaNet

  app:
    build:
      context: .
    image: app_kafkajs_image
    container_name: app_kafkajs
    ports:
      - "3000:3000"
    environment:
      TEST: true
    volumes:
      - "./:/code"

networks:
  kafkaNet:
    driver: bridge
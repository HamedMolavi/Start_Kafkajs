# docker-compose up --build --force-recreate -d
# docker-compose rm -svf
version: '3.5'

networks: 
  rmoff_kafka:
    name: rmoff_kafka

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    networks: 
      - rmoff_kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker1:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker1
    networks: 
      - rmoff_kafka
    depends_on:
      - zookeeper
    ports:
      - '19092:19092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,PLAINTEXT2://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT2:PLAINTEXT

  broker2:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker2
    networks: 
      - rmoff_kafka
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092,PLAINTEXT2://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT2:PLAINTEXT

  app:
    build:
      context: .
    image: app_kafkajs_image
    container_name: app_kafkajs
    ports:
      - "3000:3000"
    environment:
      TEST: true
    networks: 
      - rmoff_kafka
    volumes:
      - "./:/code"
    # entrypoint: sleep 20 ; npm run start